plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.sososi.class_connect_app_fltr"
    compileSdkVersion 35
    ndkVersion "26.1.10909125"

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "2.1"
        apiVersion = "2.1"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.sososi.class_connect_app_fltr"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 35
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled = true
    }

    signingConfigs {
        release {
            storeFile file('../keystore/key_20250710_classapp')
            storePassword file('../keystore/keystore.password.txt').text.trim()
            keyPassword file('../keystore/keystore.password.txt').text.trim()
            keyAlias 'key'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so flutter run --release works.
            signingConfig = signingConfigs.release
        }
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
}

flutter {
    source = "../.."
}

// ✅ Kotlin BOM 강제 적용 (호환성 문제 해결용)
dependencies {
    // For AGP 7.4+
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.1.4")

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.9.22"))

    // fcm을 위해 내용 추가 시작
    // Firebase BOM for managing versions
//    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation platform('com.google.firebase:firebase-bom:33.16.0')
    // Add the Firebase Messaging library
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
}
// fcm을 위해 내용 추가 끝